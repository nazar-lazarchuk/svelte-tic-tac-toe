{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/components/TicTacToe/components/Field/Field.svelte","../../src/components/TicTacToe/components/Col/Col.svelte","../../node_modules/svelte/store/index.mjs","../../src/components/TicTacToe/game.js","../../src/components/TicTacToe/TicTacToe.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    const z_index = (parseInt(computed_style.zIndex) || 0) - 1;\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        `overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: ${z_index};`);\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.29.7' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_custom_elements_slots, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, update_slot, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","<script>\r\n  export let squares;\r\n\r\n  export let colToLineSizeRelation = 12;\r\n  export let visibleLinesCount = squares - 1;\r\n\r\n  $: lineCount = squares + 1;\r\n  $: lineSize = 100 / (squares * colToLineSizeRelation + lineCount);\r\n\r\n  function getLineOffset(i) {\r\n    const lineOffset = (lineCount - visibleLinesCount) / 2;\r\n    const colOffset = lineOffset * colToLineSizeRelation;\r\n    const indexOffset = colToLineSizeRelation * i + i;\r\n    return (lineOffset + colOffset + indexOffset) * lineSize;\r\n  }\r\n\r\n  function getColStyles(i, j) {\r\n    return [\r\n      `width: ${colToLineSizeRelation * lineSize}%`,\r\n      `height: ${colToLineSizeRelation * lineSize}%`,\r\n      `top: ${getColIndexOffset(i)}%`,\r\n      `left: ${getColIndexOffset(j)}%`,\r\n    ].join(\"; \");\r\n  }\r\n\r\n  function getColIndexOffset(i) {\r\n    const indexOffset = 1 + (colToLineSizeRelation + 1) * i;\r\n    return indexOffset * lineSize;\r\n  }\r\n</script>\r\n\r\n<style>\r\n  .field {\r\n    position: relative;\r\n    width: 100%;\r\n    height: 0;\r\n    padding-bottom: 100%;\r\n    overflow: hidden;\r\n  }\r\n\r\n  .line {\r\n    position: absolute;\r\n    background: black;\r\n    border-radius: 999px;\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n\r\n  .col-box {\r\n    position: absolute;\r\n  }\r\n</style>\r\n\r\n<div class=\"field\">\r\n  {#each new Array(visibleLinesCount) as line, i}\r\n    <div\r\n      class=\"line\"\r\n      style={`height: ${lineSize}%; top: ${getLineOffset(i)}%`} />\r\n    <div\r\n      class=\"line\"\r\n      style={`width: ${lineSize}%; left: ${getLineOffset(i)}%`} />\r\n  {/each}\r\n\r\n  {#each new Array(squares) as row, i}\r\n    {#each new Array(squares) as col, j}\r\n      <div class=\"col-box\" style={getColStyles(i, j)}>\r\n        <slot {i} {j} />\r\n      </div>\r\n    {/each}\r\n  {/each}\r\n</div>\r\n","<script>\r\n  export let clickHandler;\r\n  export let disabled;\r\n</script>\r\n\r\n<style>\r\n  .col {\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    border-radius: 5%;\r\n    transition: background-color 0.1s ease-in-out;\r\n    cursor: pointer;\r\n    user-select: none;\r\n  }\r\n  .col:hover {\r\n    background-color: #ccc;\r\n  }\r\n\r\n  .disabled {\r\n    pointer-events: none;\r\n  }\r\n</style>\r\n\r\n<div class=\"col\" class:disabled={disabled} on:click={clickHandler}>\r\n  <slot />\r\n</div>\r\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import { writable, derived, readable, get } from 'svelte/store';\r\n\r\nexport class Game {\r\n  _squares;\r\n  _winScore;\r\n  _players;\r\n  _moves;\r\n\r\n  playerName;\r\n  cols;\r\n  gameState;\r\n\r\n  constructor(options = {}) {\r\n    this._squares = options.squares || 3;\r\n    this._winScore = options.winScore || 3;\r\n    this._players = readable(options.players || ['Player 1', 'Player 2']);\r\n    this._moves = writable([]);\r\n\r\n    this.playerName = derived(this._moves, $moves => {\r\n      const players = get(this._players);\r\n      return players[$moves.length % players.length];\r\n    });\r\n\r\n    this.cols = writable(\r\n      [...new Array(this._squares)].map((el, i) => \r\n        [...new Array(this._squares)].map((el2, j) =>\r\n          this._getInitialState(i, j)\r\n        )\r\n      )\r\n    );\r\n\r\n    this.gameState = writable({\r\n      complete: false,\r\n      draw: false,\r\n      playerName: null,\r\n    });\r\n  }\r\n\r\n  _getInitialState = (i, j) => ({\r\n    playerId: -1,\r\n    onMove: this._move(i, j),\r\n  });\r\n\r\n  _move = (i, j) => () => {\r\n    if (get(this.gameState).complete) return;\r\n    if (get(this.cols)[i][j].playerId >= 0) return;\r\n\r\n    const playerId = get(this._moves).length % get(this._players).length;\r\n\r\n    this.cols.update(cols => {\r\n      cols[i][j].playerId = playerId;\r\n      return cols;\r\n    });\r\n\r\n    const lastMove = { i, j, playerId };\r\n    this._moves.update(moves => [...moves, lastMove]);\r\n\r\n    if (this._checkWin(lastMove)) {\r\n      this.gameState.update(() => ({\r\n        complete: true,\r\n        draw: false,\r\n        playerName: get(this._players)[playerId]\r\n      }))\r\n      return;\r\n    }\r\n\r\n    if (!this._isFreeColsExists()) {\r\n      this.gameState.update(() => ({\r\n        complete: true,\r\n        draw: true,\r\n        playerName: 'Дружба'\r\n      }))\r\n    }\r\n  }\r\n\r\n  _checkWin = (lastMove) => {\r\n    const currentPlayerMoves = get(this._moves).filter(move => move.playerId === lastMove.playerId);\r\n\r\n    const horizontalCoordinates = this._getWinCoordinates((i, j) => ({\r\n      i: lastMove.i,\r\n      j: lastMove.j - j + i\r\n    }));\r\n    const verticalCoordinates = this._getWinCoordinates((i, j) => ({\r\n      i: lastMove.i - j + i,\r\n      j: lastMove.j\r\n    }));\r\n    const leftDiagonalCoordinates = this._getWinCoordinates((i, j) => ({\r\n      i: lastMove.i - j + i,\r\n      j: lastMove.j - j + i\r\n    }));\r\n    const rightDiagonalCoordinates = this._getWinCoordinates((i, j) => ({\r\n      i: lastMove.i - j + i,\r\n      j: lastMove.j - i + j\r\n    }));\r\n    const winCoordinates = [\r\n      ...horizontalCoordinates,\r\n      ...verticalCoordinates,\r\n      ...leftDiagonalCoordinates,\r\n      ...rightDiagonalCoordinates,\r\n    ];\r\n\r\n    const isWin = winCoordinates.some(coord => {\r\n      return coord.every(c => currentPlayerMoves.find(\r\n        move => move.i === c.i && move.j === c.j\r\n      ));\r\n    });\r\n\r\n    return isWin;\r\n  }\r\n\r\n  /**\r\n   * function to find out all the expected coordinates to win\r\n   * @param {Function} calculateCoordinate \r\n   */\r\n  _getWinCoordinates = (calculateCoordinate) => {\r\n    const result = [];\r\n\r\n    for (let i = 0; i < this._winScore; i++) {\r\n      const h = [];\r\n      for(let j = 0; j < this._winScore; j++) {\r\n        const coord = calculateCoordinate(i, j);\r\n        if (coord.i >= 0 && coord.j >= 0 && coord.i < this._squares && coord.j < this._squares) {\r\n          h.push(coord);\r\n        }\r\n      }\r\n      if (h.length === this._winScore) {\r\n        result.push(h);\r\n      }\r\n    }\r\n\r\n    return result;\r\n  };\r\n\r\n  _isFreeColsExists = () => {\r\n    return get(this._moves).length < this._squares ** 2;\r\n  }\r\n}\r\n","<script>\r\n  export let squares = 3;\r\n  export let winScore = 3;\r\n  export let players = ['John', 'Tom'];\r\n  export let fullStroke = false;\r\n  export let colToLineSizeRelation;\r\n\r\n  import Field from './components/Field';\r\n  import Col from './components/Col';\r\n  import Cross from './components/signs/Cross.svelte';\r\n  import Zero from './components/signs/Zero.svelte';\r\n\r\n  import { Game } from './game';\r\n\r\n  const signs = [Cross, Zero];\r\n\r\n  let game = new Game({ squares, players, winScore });\r\n\r\n  $: playerName = game.playerName;\r\n  $: cols = game.cols;\r\n  $: gameState = game.gameState;\r\n\r\n  function startNewGame() {\r\n    players.reverse();\r\n    game = new Game({ squares, players, winScore });\r\n  }\r\n</script>\r\n\r\n<style>\r\n  button {\r\n    float: right;\r\n  }\r\n  button.active {\r\n    background: green;\r\n    color: white;\r\n  }\r\n</style>\r\n\r\n<button on:click={startNewGame} class:active={$gameState.complete}>Restart</button>\r\n\r\n{#if !$gameState.complete}\r\n  <h1>Plays: {$playerName}</h1>\r\n{:else if $gameState.draw}\r\n  <h1>Draw!</h1>\r\n{:else}\r\n  <h1>{$gameState.playerName} won! =)</h1>\r\n{/if}\r\n\r\n<Field\r\n  {squares}\r\n  {colToLineSizeRelation}\r\n  visibleLinesCount={fullStroke ? squares + 1 : squares - 1}\r\n  let:i\r\n  let:j\r\n>\r\n  <Col disabled={$cols[i][j].playerId >= 0} clickHandler={$cols[i][j].onMove}>\r\n    <svelte:component this={signs[$cols[i][j].playerId]} />\r\n  </Col>\r\n</Field>\r\n","<script>\r\n  import TicTacToe from './components/TicTacToe';\r\n\r\n  let squares = 7;\r\n  let winScore = 4;\r\n  let fullStroke = false;\r\n  let players = ['John', 'Tom'];\r\n  let colToLineSizeRelation = 12;\r\n\r\n  $: reRenderKey = `${squares}-${winScore}-${+fullStroke}-${players.join('')}-${colToLineSizeRelation}`;\r\n</script>\r\n\r\n<style>\r\n  main {\r\n    position: relative;\r\n    max-width: 600px;\r\n    margin: 20px auto;\r\n    padding: 0 20px;\r\n  }\r\n</style>\r\n\r\n<main>\r\n  <div style=\"position: relative;\">\r\n    {#key reRenderKey}\r\n      <TicTacToe {squares} {winScore} {fullStroke} {players} {colToLineSizeRelation} />\r\n    {/key}\r\n  </div>\r\n\r\n  <hr />\r\n\r\n  <h1>Settings</h1>\r\n  <div>\r\n    <label>\r\n      Squares: <input type=\"number\" bind:value={squares} min=\"1\" />\r\n    </label>\r\n    <label>\r\n      Win score: <input type=\"number\" bind:value={winScore} min=\"1\" />\r\n    </label>\r\n    <label>\r\n      Full stroke: <input type=\"checkbox\" bind:checked={fullStroke} />\r\n    </label>\r\n    {#each players as player, i}\r\n      <label>\r\n        Player {i + 1}: <input type=\"text\" bind:value={players[i]} />\r\n      </label>\r\n    {/each}\r\n    <!-- <button on:click={() => players = [...players, 'John Doe']}>Add player</button> -->\r\n  </div>\r\n  <hr />\r\n  <h2>Additional</h2>\r\n  <div>\r\n    <label>\r\n      Field proportion: <input type=\"number\" bind:value={colToLineSizeRelation} min=\"1\" />\r\n    </label>\r\n  </div>\r\n</main>\r\n","import App from \"./App.svelte\";\r\n\r\nconst app = new App({\r\n  target: document.body,\r\n  props: {},\r\n});\r\n\r\nexport default app;\r\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","subscribe","store","callbacks","unsub","unsubscribe","get_store_value","value","_","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","tar","src","k","assign","slice","update_slot","slot","slot_definition","dirty","get_slot_changes_fn","get_slot_context_fn","slot_changes","lets","undefined","merged","len","Math","max","length","i","get_slot_changes","slot_context","p","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","d","element","name","document","createElement","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","removeAttribute","getAttribute","setAttribute","to_number","set_data","wholeText","set_input_value","input","toggle_class","toggle","classList","current_component","set_current_component","component","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","push","flushing","seen_callbacks","Set","flush","update","$$","pop","callback","has","add","clear","fragment","before_update","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","create_component","mount_component","on_mount","on_destroy","m","new_on_destroy","map","filter","destroy_component","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","parent_component","prop_values","bound","context","Map","skip_bound","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","[object Object]","this","$destroy","type","index","indexOf","splice","$$props","obj","$$set","keys","squares","colToLineSizeRelation","visibleLinesCount","getColIndexOffset","lineSize","lineCount","lineOffset","j","join","clickHandler","disabled","subscriber_queue","readable","start","writable","stop","subscribers","set","new_value","run_queue","s","invalidate","subscriber","Game","_squares","_winScore","winScore","_players","players","_moves","playerName","stores","initial_value","single","isArray","stores_array","auto","inited","values","pending","cleanup","sync","result","unsubscribers","derived","$moves","get","cols","el","el2","_getInitialState","gameState","complete","draw","playerId","onMove","_move","lastMove","moves","_checkWin","_isFreeColsExists","currentPlayerMoves","move","_getWinCoordinates","some","coord","every","find","calculateCoordinate","h","fullStroke","signs","Cross","Zero","game","reverse","key","important","style","setProperty","reRenderKey","body"],"mappings":"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"}